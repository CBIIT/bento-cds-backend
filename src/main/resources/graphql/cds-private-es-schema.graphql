type File {
  file_id: String
  file_name: String
  file_type: String
  file_description: String
  file_size: Float
  md5sum: String
  file_url_in_cds: String
  experimental_strategy_and_data_subtypes: String
  study: Study
  genomic_info: [Genomic_Info]
  samples: [Sample]
}

type Study {
  study_name: String
  study_acronym: String
  study_description: String
  short_description: String
  study_external_url: String
  primary_investigator_name: String
  primary_investigator_email: String
  co_investigator_name: String
  co_investigator_email: String
  phs_accession: String
  bioproject_accession: String
  index_date: String
  cds_requestor: String
  funding_agency: String
  funding_source_program_name: String
  grant_id: String
  clinical_trial_system: String
  clinical_trial_identifier: String
  clinical_trial_arm: String
  organism_species: String
  adult_or_childhood_study: String
  data_types: String
  file_types: String
  data_access_level: String
  cds_primary_bucket: String
  cds_secondary_bucket: String
  cds_tertiary_bucket: String
  number_of_participants: Float
  number_of_samples: Float
  study_data_types: String
  file_types_and_format: String
  size_of_data_being_uploaded: Float
  size_of_data_being_uploaded_unit: String
  size_of_data_being_uploaded_original: Float
  size_of_data_being_uploaded_original_unit: String
  acl: String
  study_access: String
  program: Program
  participants: [Participant]
  files: [File]
}

type Genomic_Info {
  library_id: String
  bases: Int
  number_of_reads: Int
  avg_read_length: Float
  coverage: Float
  reference_genome_assembly: String
  custom_assembly_fasta_file_for_alignment: String
  design_description: String
  library_strategy: String
  library_layout: String
  library_source: String
  library_selection: String
  platform: String
  instrument_model: String
  sequence_alignment_software: String
  files: [File]
  samples: [Sample]
  file: File
}

type Program {
  program_name: String
  program_acronym: String
  program_short_description: String
  program_full_description: String
  program_external_url: String
  program_sort_order: Int
  studies: [Study]
}

type Sample {
  sample_id: String
  sample_type: String
  sample_tumor_status: String
  sample_anatomic_site: String
  sample_age_at_collection: Int
  derived_from_specimen: String
  biosample_accession: String
  participant: Participant
  specimen: Specimen
  files: [File]
  genomic_info: [Genomic_Info]
}

type Participant {
  participant_id: String
  race: String
  gender: String
  ethnicity: String
  dbGaP_subject_id: String
  study: Study
  diagnoses: [Diagnosis]
  specimens: [Specimen]
  samples: [Sample]
}

type Diagnosis {
  diagnosis_id: String
  disease_type: String
  vital_status: String
  primary_diagnosis: String
  primary_site: String
  age_at_diagnosis: Int
  tumor_grade: String
  tumor_stage_clinical_m: String
  tumor_stage_clinical_n: String
  tumor_stage_clinical_t: String
  morphology: String
  incidence_type: String
  progression_or_recurrence: String
  days_to_recurrence: Int
  days_to_last_followup: Int
  last_known_disease_status: String
  days_to_last_known_status: Int
  participant: Participant
}

type Specimen {
  specimen_id: String
  participant: Participant
  samples: [Sample]
}

type Treatment {
  treatment_id: String
  treatment_type: String
  treatment_outcome: String
  days_to_treatment: Int
  therapeutic_agents: String
}

type SubjectOverview {
    subject_id: String
    study_acronym: String
    phs_accession: String
    gender: String
    site: [String]

    samples: [String]
    files: [String]
}

type SampleOverview {
    study_acronym: String
    phs_accession: String
    subject_id: String
    sample_id: String

    is_tumor: String
    analyte_type: String

    files: [String]
}

type FileOverview {
    study_acronym: String
    accesses: String
    phs_accession: String
    subject_id: String
    sample_id: String
    experimental_strategy: String
    gender: String
    analyte_type: String
    is_tumor: String
    file_name: String
    file_type: String
    file_size: Float
    file_id: String
    md5sum: String
}

type SearchResult {
    numberOfStudies: Int
    numberOfSubjects: Int
    numberOfSamples: Int
    numberOfFiles: Int
    numberOfDiseaseSites: Int

    subjectCountByStudy: [GroupCount]
    subjectCountByExperimentalStrategy: [GroupCount]
    subjectCountByAccess: [GroupCount]
    subjectCountByGender: [GroupCount]
    subjectCountByIsTumor: [GroupCount]
    subjectCountByAnalyteType: [GroupCount]
    subjectCountByFileType: [GroupCount]
    subjectCountByDiseaseSite: [GroupCount]
    subjectCountByLibraryStrategy: [GroupCount]
    subjectCountByLibrarySource: [GroupCount]
    subjectCountByLibrarySelection: [GroupCount]
    subjectCountByLibraryLayout: [GroupCount]
    subjectCountByPlatform: [GroupCount]
    subjectCountByInstrumentModel: [GroupCount]
    subjectCountByReferenceGenomeAssembly: [GroupCount]
    subjectCountByPrimaryDiagnosis: [GroupCount]
    subjectCountByPhsAccession: [GroupCount]
    subjectCountByStudyDataType: [GroupCount]
    subjectCountByAcl: [GroupCount]

    filterSubjectCountByStudy: [GroupCount]
    filterSubjectCountByExperimentalStrategy: [GroupCount]
    filterSubjectCountByAccess: [GroupCount]
    filterSubjectCountByGender: [GroupCount]
    filterSubjectCountByIsTumor: [GroupCount]
    filterSubjectCountByFileType: [GroupCount]
    filterSubjectCountByAnalyteType: [GroupCount]
    filterSubjectCountByDiseaseSite: [GroupCount]
    filterSubjectCountByLibraryStrategy: [GroupCount]
    filterSubjectCountByLibrarySource: [GroupCount]
    filterSubjectCountByLibrarySelection: [GroupCount]
    filterSubjectCountByLibraryLayout: [GroupCount]
    filterSubjectCountByPlatform: [GroupCount]
    filterSubjectCountByInstrumentModel: [GroupCount]
    filterSubjectCountByReferenceGenomeAssembly: [GroupCount]
    filterSubjectCountByPrimaryDiagnosis: [GroupCount]
    filterSubjectCountByPhsAccession: [GroupCount]
    filterSubjectCountByStudyDataType: [GroupCount]
    filterSubjectCountByAcl: [GroupCount]
    filterSubjectCountByNumberOfStudyParticipants: RangeCount
    filterSubjectCountByNumberOfStudySamples: RangeCount
}

type RangeCount {
    lowerBound: Float
    upperBound: Float
    subjects: Int
}

type GroupCount {
    group: String
    subjects: Int
}

type GS_Study {
    type: String
    phs_accession: String
    study_data_types: String
    study_name: String
    study_code: String
}

type GS_Subject {
    type: String
    study: String
    subject_id: String
    site: String
    gender: String
}

type GS_Sample {
    type: String
    sample_id: String
    is_tumor: String
    analyte_type: String
}

type GS_File {
    type: String
    subject_id: String
    sample_id: String
    file_id: String
    file_name: String
    file_type: String
    accesses: String
    acl: String
    experimental_strategies: [String]
    instrument_models: [String]
    library_layouts: [String]
    library_selections: [String]
    library_sources: [String]
    library_strategies: [String]
    platforms: [String]
    reference_genome_assemblies: [String]
    sites: [String]
}

type GS_Model {
    type: String
    node_name: String
    property_name: String
    property_description: String
    property_required: String
    property_type: String
    value: String
    highlight: String
}

type GS_About {
    page: String
    title: String
    type: String
    text: String
}

type GS_Program {
    program_name: String
    program_short_description: String
    program_full_description: String
    program_external_url: String
    program_sort_order: String
    type: String
}

type GlobalSearchResult {
    study_count: Int
    studies: [GS_Study]

    subject_count: Int
    subjects: [GS_Subject]

    sample_count: Int
    samples: [GS_Sample]

    file_count: Int
    files: [GS_File]

    program_count: Int
    programs: [GS_Program]

    about_count: Int
    about_page: [GS_About]

    model_count: Int
    model: [GS_Model]
}

type SubjectResult {
    subject_id: String
    phs_accession: String
}

type IdsListsES {
    subjectIds: [String]
}

type ProgramListEntry {
    acronym: String
    name: String
    website: String
    num_studies: Int
}

schema {
    query: QueryType
}

type QueryType {
    schemaVersion: String
    numberOfStudies: Int
    numberOfSubjects: Int
    numberOfSamples: Int
    numberOfFiles: Int
    numberOfDiseaseSites: Int

    diagnosis(
        first: Int = 2500,
        offset: Int = 0,
        diagnosis_id: String,
        disease_type: String,
        vital_status: String,
        primary_diagnosis: String,
        primary_site: String,
        age_at_diagnosis: Int,
        tumor_grade: String,
        tumor_stage_clinical_m: String,
        tumor_stage_clinical_n: String,
        tumor_stage_clinical_t: String,
        morphology: String,
        incidence_type: String,
        progression_or_recurrence: String,
        days_to_recurrence: Int,
        days_to_last_followup: Int,
        last_known_disease_status: String,
        days_to_last_known_status: Int
    ): [Diagnosis]

     participant (
        first: Int = 2500,
        offset: Int = 0,
        participant_id: String,
        race: String,
        gender: String,
        ethnicity: String,
        dbGaP_subject_id: String
    ): [Participant]

    file (
        first: Int = 2500,
        offset: Int = 0,
        file_id: String,
        file_name: String,
        file_type: String,
        file_description: String,
        file_size: Float,
        md5sum: String,
        file_url_in_cds: String,
        experimental_strategy_and_data_subtypes: String
    ): [File]
   genomic_info (
        first: Int = 2500,
        offset: Int = 0,
		library_id: String,
		bases: Int,
		number_of_reads: Int,
		avg_read_length: Float,
		coverage: Float,
		reference_genome_assembly: String,
		custom_assembly_fasta_file_for_alignment: String,
		design_description: String,
		library_strategy: String,
		library_layout: String,
		library_source: String,
		library_selection: String,
		platform: String,
		instrument_model: String,
		sequence_alignment_software: String
    ): [Genomic_Info]

    program (
        first: Int = 2500,
        offset: Int = 0,
		program_name: String,
		program_acronym: String,
		program_short_description: String,
		program_full_description: String,
		program_external_url: String,
		program_sort_order: Int
    ): [Program]

    sample (
        first: Int = 2500,
        offset: Int = 0,
		sample_id: String,
		sample_type: String,
		sample_tumor_status: String,
		sample_anatomic_site: String,
		sample_age_at_collection: Int,
		derived_from_specimen: String,
		biosample_accession: String
    ): [Sample]

    specimen (
        first: Int = 2500,
        offset: Int = 0,
		specimen_id: String
    ): [Specimen]

    study (
        first: Int = 2500,
        offset: Int = 0,
		study_name: String,
		study_acronym: String,
		study_description: String,
		short_description: String,
		study_external_url: String,
		primary_investigator_name: String,
		primary_investigator_email: String,
		co_investigator_name: String,
		co_investigator_email: String,
		phs_accession: String,
		bioproject_accession: String,
		index_date: String,
		cds_requestor: String,
		funding_agency: String,
		funding_source_program_name: String,
		grant_id: String,
		clinical_trial_system: String,
		clinical_trial_identifier: String,
		clinical_trial_arm: String,
		organism_species: String,
		adult_or_childhood_study: String,
		data_types: String,
		file_types: String,
		data_access_level: String,
		cds_primary_bucket: String,
		cds_secondary_bucket: String,
		cds_tertiary_bucket: String,
		number_of_participants: Float,
		number_of_samples: Float,
		study_data_types: String,
		file_types_and_format: String,
		size_of_data_being_uploaded: Float,
		size_of_data_being_uploaded_unit: String,
		size_of_data_being_uploaded_original: Float,
		size_of_data_being_uploaded_original_unit: String,
		acl: String,
		study_access: String
    ): [Study]

    treatment (
        first: Int = 2500,
        offset: Int = 0,
		treatment_id: String,
		treatment_type: String,
		treatment_outcome: String,
		days_to_treatment: Int,
		therapeutic_agents: String
    ): [Treatment]

    idsLists: IdsListsES

    programList: [ProgramListEntry]
    searchSubjects (
        subject_ids: [String] = [],

        accesses: [String] = [],
        acl: [String] = [],
        experimental_strategies: [String] = [],
        file_types: [String] = [],
        genders: [String] = [],
        instrument_models: [String] = [],
        is_tumor: [String] = [],
        library_layouts: [String] = [],
        library_selections: [String] = [],
        library_sources: [String] = [],
        library_strategies: [String] = [],
        number_of_study_participants: [Float] = [],
        number_of_study_samples: [Float] = [],
        phs_accession: [String] = [],
        platforms: [String] = [],
        primary_diagnoses: [String] = [],
        reference_genome_assemblies: [String] = [],
        site: [String] = [],
        studies: [String] = [],
        study_data_types: [String] = []
    ): SearchResult

    subjectOverview (
        subject_ids: [String] = [],

        accesses: [String] = [],
        acl: [String] = [],
        experimental_strategies: [String] = [],
        file_types: [String] = [],
        genders: [String] = [],
        instrument_models: [String] = [],
        is_tumor: [String] = [],
        library_layouts: [String] = [],
        library_selections: [String] = [],
        library_sources: [String] = [],
        library_strategies: [String] = [],
        number_of_study_participants: [Float] = [],
        number_of_study_samples: [Float] = [],
        phs_accession: [String] = [],
        platforms: [String] = [],
        primary_diagnoses: [String] = [],
        reference_genome_assemblies: [String] = [],
        site: [String] = [],
        studies: [String] = [],
        study_data_types: [String] = [],

        order_by: String = "",
        sort_direction: String = "ASC",
        first: Int = 10,
        offset: Int = 0
    ): [SubjectOverview]

    sampleOverview (
        subject_ids: [String] = [],
        sample_ids: [String] = [],

        accesses: [String] = [],
        acl: [String] = [],
        experimental_strategies: [String] = [],
        file_types: [String] = [],
        genders: [String] = [],
        instrument_models: [String] = [],
        is_tumor: [String] = [],
        library_layouts: [String] = [],
        library_selections: [String] = [],
        library_sources: [String] = [],
        library_strategies: [String] = [],
        number_of_study_participants: [Float] = [],
        number_of_study_samples: [Float] = [],
        phs_accession: [String] = [],
        platforms: [String] = [],
        primary_diagnoses: [String] = [],
        reference_genome_assemblies: [String] = [],
        site: [String] = [],
        studies: [String] = [],
        study_data_types: [String] = []

        order_by: String = "",
        sort_direction: String = "ASC",
        first: Int = 10,
        offset: Int = 0
    ): [SampleOverview]

    fileOverview (
        subject_ids: [String] = [],
        sample_ids: [String] = [],
        file_ids: [String] = [],

        accesses: [String] = [],
        acl: [String] = [],
        experimental_strategies: [String] = [],
        file_types: [String] = [],
        genders: [String] = [],
        instrument_models: [String] = [],
        is_tumor: [String] = [],
        library_layouts: [String] = [],
        library_selections: [String] = [],
        library_sources: [String] = [],
        library_strategies: [String] = [],
        number_of_study_participants: [Float] = [],
        number_of_study_samples: [Float] = [],
        phs_accession: [String] = [],
        platforms: [String] = [],
        primary_diagnoses: [String] = [],
        reference_genome_assemblies: [String] = [],
        site: [String] = [],
        studies: [String] = [],
        study_data_types: [String] = [],

        order_by: String = "",
        sort_direction: String = "ASC",
        first: Int = 10,
        offset: Int = 0
    ): [FileOverview]

    fileIDsFromList(
        subject_ids: [String] = [""],
        sample_ids: [String] = [""],
        file_names: [String] = [""],
        file_ids: [String] = [""]
    ): [String]

    findSubjectIdsInList(subject_ids: [String] = []): [SubjectResult]

    globalSearch (input: String, first: Int = 10, offset: Int = 0): GlobalSearchResult

}
